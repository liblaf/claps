name: CI

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Tools
        uses: liblaf/template/.github/actions/install@main
        with:
          brew: coreutils gnu-sed
          choco: gnuwin32-coreutils.install sed
          other: task
      - name: Install Rust Toolchain
        run: |
          rustup default ${{ matrix.toolchain }}
          rustup update ${{ matrix.toolchain }}
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: task dist
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.toolchain }}
          path: dist/*
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        toolchain:
          - stable

  build-python:
    name: Build Python Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Tools
        uses: liblaf/template/.github/actions/install@main
        with:
          other: poetry task
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry
      - name: Install Dependencies
        run: poetry install
      - name: Build Package
        run: poetry run task python:build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: py${{ matrix.python-version }}
          path: dist/*
    strategy:
      matrix:
        python-version:
          - 3.11

  release:
    name: Release
    permissions:
      contents: write
    needs:
      - build
      - build-python
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Create GitHub Release
        uses: liblaf/template/.github/actions/release@main
        with:
          tag: dev
          files: "*"
          prerelease: true
